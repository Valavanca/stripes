@charset "UTF-8";@font-face{font-family:'Bree Serif';font-style:normal;font-weight:400;src:local('Bree Serif'),local('BreeSerif-Regular'),url(https://fonts.gstatic.com/s/breeserif/v5/LQ7WLTaITDg4OSRuOZCpsy3USBnSvpkopQaUR-2r7iU.ttf) format('truetype')}@font-face{font-family:'Open Sans';font-style:normal;font-weight:300;src:local('Open Sans Light'),local('OpenSans-Light'),url(https://fonts.gstatic.com/s/opensans/v13/DXI1ORHCpsQm3Vp6mXoaTYnF5uFdDttMLvmWuJdhhgs.ttf) format('truetype')}@font-face{font-family:'Open Sans';font-style:normal;font-weight:400;src:local('Open Sans'),local('OpenSans'),url(https://fonts.gstatic.com/s/opensans/v13/cJZKeOuBrn4kERxqtaUH3aCWcynf_cDxXwCLxiixG1c.ttf) format('truetype')}@font-face{font-family:'Open Sans';font-style:normal;font-weight:600;src:local('Open Sans Semibold'),local('OpenSans-Semibold'),url(https://fonts.gstatic.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSonF5uFdDttMLvmWuJdhhgs.ttf) format('truetype')}body,html,ul{font-family:"Bree Serif","Open Sans",sans-serif;font-size:17pt;color:#333;background:url(/img/bg_5x5.png) #333;margin:0;padding:0;overflow-x:hidden}.container{max-width:960px;margin-left:auto;margin-right:auto;padding:0 5%}.container:after{content:" ";display:block;clear:both}head{display:block;position:fixed;right:10px;top:10px;z-index:999;color:#333;background:rgba(255,255,255,.25)}head:before{content:"|||";display:block;padding:5px 10px;font-family:sans-serif;font-size:16px;font-weight:700}head:hover{background:rgba(255,255,255,.5);color:red}head:hover~.container,head:hover~body .container{position:relative}head:hover~.container:before,head:hover~body .container:before{position:absolute;top:0;left:0;bottom:0;right:0;content:" ";z-index:998;background-image:-webkit-linear-gradient(left,rgba(102,102,255,.5),rgba(179,179,255,.5) 66.66667%,transparent 66.66667%);background-image:linear-gradient(to right,rgba(102,102,255,.5),rgba(179,179,255,.5) 66.66667%,transparent 66.66667%);background-size:8.57143%;background-origin:content-box;background-clip:content-box;background-position:left top}a{text-decoration:none}#header .logo{background:#fff}#header .logo span{color:#333;text-transform:uppercase;font-size:1.2em}#header .logo span+span{color:#53a665;font-size:1.2em}@media (min-width:320px){#header,.featured-pst,.featured-pst .poster,.section{width:100%;margin-left:0;margin-right:0;float:left}h1{font-size:1.6em}h2{font-size:1.4em}#header .logo{padding:2%}#header nav{padding:5%}#header a{text-transform:uppercase;list-style:none;text-decoration:none}#header a li{width:100%;border-bottom:2px solid #333;color:#333}#header a li:hover{color:#53a665;border-color:#53a665}.featured-pst .container{position:relative}.featured-pst iframe{display:none}.featured-pst h1 a,.featured-pst h2 a{color:#333;background-color:#fff}.featured-pst p{padding:.2em;color:grey;background-color:#fff}.featured-pst p a{text-decoration:underline;color:#53a665}.featured-pst p+a[rel=bookmark]{position:absolute;right:3%;bottom:-3%;font-size:.8em;background-color:#53a665;padding:.1em .5em;text-transform:lowercase;color:#fff}.section{text-align:center}.item{position:relative;margin:1em 0}.item h2{text-transform:uppercase;color:#333;margin:0}.item h2 span{color:#53a665}.item p{margin:1em;color:#4d4d4d;font-size:.9em}.item p+a[rel=bookmark]{padding:.1em .5em;font-size:.8em;background-color:#53a665;text-transform:lowercase;color:#fff}.icon img{width:2em;margin-top:1em;margin-bottom:0}.footer{width:100%;float:left;margin-left:0;margin-right:0}.footer .social{border-top:.1em solid grey;text-align:center;margin:.7em}.footer .soc-icon{display:inline-block;margin:.4em .7em;font-size:1.2em}.footer .soc-icon a{color:grey}}@media (min-width:720px){#header{width:100%;float:left;margin-left:0;margin-right:0;text-align:center;background:#fff;margin-bottom:1em}#header .logo{padding-bottom:.5%}#header nav{padding:0;margin-bottom:.1em}#header ul{background:#fff;padding-bottom:.7em}#header a{display:inline-block}#header a li{position:relative;display:inline;border-bottom:none;font-size:.8em}#header a li:hover::before{position:absolute;top:1em;content:'â–¼';color:#53a665;font-size:1em;width:100%;font-weight:bolder}#header a:not(:last-child)::after{color:#333;margin:0 .9em;content:'/'}.featured-pst{background:url(/img/5x5_stripes.png) repeat-x,url(/img/5x5_stripes.png) right 150px repeat-x,url(/img/5x5_stripes.png) right 300px repeat-x}.featured-pst h1 a,.featured-pst h2 a{color:#53a665}.featured-pst p+a[rel=bookmark]{right:6%;bottom:-6%}}@media (min-width:1000px){#header,#header .logo{float:left}#header .logo,#header ul{padding:1em 0}#header{width:100%;margin-left:0;margin-right:0}#header nav{float:right}#header .wrapper{max-width:920px;margin-left:auto;margin-right:auto}#header .wrapper:after{content:" ";display:block;clear:both}head:hover~#header .wrapper,head:hover~body #header .wrapper{position:relative}head:hover~#header .wrapper:before,head:hover~body #header .wrapper:before{position:absolute;top:0;left:0;bottom:0;right:0;content:" ";z-index:998;background-image:-webkit-linear-gradient(left,rgba(102,102,255,.5),rgba(179,179,255,.5) 66.66667%,transparent 66.66667%);background-image:linear-gradient(to right,rgba(102,102,255,.5),rgba(179,179,255,.5) 66.66667%,transparent 66.66667%);background-size:8.57143%;background-origin:content-box;background-clip:content-box;background-position:left top}.featured-pst{width:100%;float:left;margin-left:0;margin-right:0}.featured-pst .video,.featured-pst iframe{display:inherit;float:right;margin:.5em;width:400px}.featured-pst .poster{display:none}.section{width:100%;float:left;margin-left:0;margin-right:0;display:inline-block}.section .item{width:31.42857%;float:left;margin-left:.85714%}}
/*# sourceMappingURL=data:application/json;base64, */
